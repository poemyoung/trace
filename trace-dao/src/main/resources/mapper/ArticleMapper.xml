<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trace.dao.repository.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.trace.dao.entity.Article">
    <id column="aid" jdbcType="INTEGER" property="aid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="headline" jdbcType="VARCHAR" property="headline" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="next_aid" jdbcType="INTEGER" property="nextAid" />
    <result column="whom" jdbcType="TINYINT" property="whom" />
    <result column="first" jdbcType="TINYINT" property="first" />
    <result column="evaluate" jdbcType="VARCHAR" property="evaluate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aid, uid, headline, content, time, status, next_aid, whom, first, evaluate
  </sql>
  <select id="selectByExample" parameterType="com.trace.dao.entity.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.trace.dao.entity.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.trace.dao.entity.Article">
    insert into article (aid, uid, headline, 
      content, time, status, 
      next_aid, whom, first, 
      evaluate)
    values (#{aid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{headline,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{nextAid,jdbcType=INTEGER}, #{whom,jdbcType=TINYINT}, #{first,jdbcType=TINYINT}, 
      #{evaluate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.trace.dao.entity.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        aid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="headline != null">
        headline,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="nextAid != null">
        next_aid,
      </if>
      <if test="whom != null">
        whom,
      </if>
      <if test="first != null">
        first,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="headline != null">
        #{headline,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="nextAid != null">
        #{nextAid,jdbcType=INTEGER},
      </if>
      <if test="whom != null">
        #{whom,jdbcType=TINYINT},
      </if>
      <if test="first != null">
        #{first,jdbcType=TINYINT},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.trace.dao.entity.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.headline != null">
        headline = #{record.headline,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.nextAid != null">
        next_aid = #{record.nextAid,jdbcType=INTEGER},
      </if>
      <if test="record.whom != null">
        whom = #{record.whom,jdbcType=TINYINT},
      </if>
      <if test="record.first != null">
        first = #{record.first,jdbcType=TINYINT},
      </if>
      <if test="record.evaluate != null">
        evaluate = #{record.evaluate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set aid = #{record.aid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      headline = #{record.headline,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      next_aid = #{record.nextAid,jdbcType=INTEGER},
      whom = #{record.whom,jdbcType=TINYINT},
      first = #{record.first,jdbcType=TINYINT},
      evaluate = #{record.evaluate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.trace.dao.entity.Article">
    update article
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="headline != null">
        headline = #{headline,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="nextAid != null">
        next_aid = #{nextAid,jdbcType=INTEGER},
      </if>
      <if test="whom != null">
        whom = #{whom,jdbcType=TINYINT},
      </if>
      <if test="first != null">
        first = #{first,jdbcType=TINYINT},
      </if>
      <if test="evaluate != null">
        evaluate = #{evaluate,jdbcType=VARCHAR},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trace.dao.entity.Article">
    update article
    set uid = #{uid,jdbcType=INTEGER},
      headline = #{headline,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      next_aid = #{nextAid,jdbcType=INTEGER},
      whom = #{whom,jdbcType=TINYINT},
      first = #{first,jdbcType=TINYINT},
      evaluate = #{evaluate,jdbcType=VARCHAR}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
</mapper>