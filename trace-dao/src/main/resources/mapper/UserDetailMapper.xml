<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trace.dao.repository.UserDetailMapper">
  <resultMap id="BaseResultMap" type="com.trace.dao.entity.UserDetail">
    <id column="iduser_detail" jdbcType="INTEGER" property="iduserDetail" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="addr_id" jdbcType="INTEGER" property="addrId" />
    <result column="risk_flag" jdbcType="INTEGER" property="riskFlag" />
    <result column="temp" jdbcType="VARCHAR" property="temp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    iduser_detail, phone, addr_id, risk_flag, temp
  </sql>
  <select id="selectByExample" parameterType="com.trace.dao.entity.UserDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_detail
    where iduser_detail = #{iduserDetail,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_detail
    where iduser_detail = #{iduserDetail,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.trace.dao.entity.UserDetail">
    insert into user_detail (iduser_detail, phone, addr_id, 
      risk_flag, temp)
    values (#{iduserDetail,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{addrId,jdbcType=INTEGER}, 
      #{riskFlag,jdbcType=INTEGER}, #{temp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.trace.dao.entity.UserDetail">
    insert into user_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="iduserDetail != null">
        iduser_detail,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="addrId != null">
        addr_id,
      </if>
      <if test="riskFlag != null">
        risk_flag,
      </if>
      <if test="temp != null">
        temp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="iduserDetail != null">
        #{iduserDetail,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="addrId != null">
        #{addrId,jdbcType=INTEGER},
      </if>
      <if test="riskFlag != null">
        #{riskFlag,jdbcType=INTEGER},
      </if>
      <if test="temp != null">
        #{temp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trace.dao.entity.UserDetail">
    update user_detail
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="addrId != null">
        addr_id = #{addrId,jdbcType=INTEGER},
      </if>
      <if test="riskFlag != null">
        risk_flag = #{riskFlag,jdbcType=INTEGER},
      </if>
      <if test="temp != null">
        temp = #{temp,jdbcType=VARCHAR},
      </if>
    </set>
    where iduser_detail = #{iduserDetail,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trace.dao.entity.UserDetail">
    update user_detail
    set phone = #{phone,jdbcType=VARCHAR},
      addr_id = #{addrId,jdbcType=INTEGER},
      risk_flag = #{riskFlag,jdbcType=INTEGER},
      temp = #{temp,jdbcType=VARCHAR}
    where iduser_detail = #{iduserDetail,jdbcType=INTEGER}
  </update>
  <select id="findHasSymptom" resultType="java.lang.Integer">
    select user_detail.iduser_detail from user_detail,user_info where
    user_detail.iduser_detail = user_info.id and
     user_detail.risk_flag > 0 or user_info.user_type > 0
     order by iduser_detail asc
  </select>
  <select id="findNoSymptom" resultType="java.lang.Integer">
    select user_detail.iduser_detail from user_detail,user_info where
    user_detail.iduser_detail = user_info.id and
     user_detail.risk_flag = 0 and (user_info.user_type = 0 or user_info.user_type is null )
     order by iduser_detail asc
  </select>
</mapper>